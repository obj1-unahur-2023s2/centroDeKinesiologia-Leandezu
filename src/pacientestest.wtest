import pacientes.*
import centro.*
import aparatos.*

describe "Test de pacientes"{
	const leonardo = new Paciente(edad = 40, nivelDeDolor = 10, fortalezaMuscular = 20)
	const milena = new Paciente(edad = 3, nivelDeDolor = 30, fortalezaMuscular = 50)
	const m = new Magneto(color = "blanco")
	const b = new Bicicleta(color = "blanco")
	const mi = new Minitramp(color = "blanco")
	
	test"Leonardo puede usar los tres aparatos creados"{
		assert.equals(true, leonardo.puedeUsarElAparato(m) and
							leonardo.puedeUsarElAparato(b) and
							leonardo.puedeUsarElAparato(mi))
	}
	test"Milena solo puede usar a Magneto"{
		assert.equals(true, milena.puedeUsarElAparato(m) and
							not milena.puedeUsarElAparato(b) and
							not milena.puedeUsarElAparato(mi))
	}
	test"El dolor de leonardo es 9 usando magneto"{
		leonardo.usarAparato(m)
		assert.equals(9, leonardo.nivelDeDolor())
	}
	test"El dolor de milena es 27 usando magneto"{
		milena.usarAparato(m)
		assert.equals(27, milena.nivelDeDolor())
	}
	test"El dolor de leonardo es 6 usando bicicleta"{
		leonardo.usarAparato(b)
		assert.equals(6, leonardo.nivelDeDolor())
	}
	test"La fortaleza de leonardo es 23 usando bicicleta"{
		leonardo.usarAparato(b)
		assert.equals(23, leonardo.fortalezaMuscular())
	}
	test"La fortaleza de leonardo es 24 usando Minitramp"{
		leonardo.usarAparato(mi)
		assert.equals(24, leonardo.fortalezaMuscular())
	}
}

describe "Test de paciente especiales"{
	const nicolas = new PacienteResistente(
		edad = 40,
		nivelDeDolor = 10,
		fortalezaMuscular = 20
	)
	const victoria = new PacienteCaprichoso(
		edad = 30,
		nivelDeDolor = 10,
		fortalezaMuscular = 40
	)
	const julian = new PacienteCaprichoso(
		edad = 20,
		nivelDeDolor = 54, 
		fortalezaMuscular = 50
	)
	const zoe = new PacienteRecuperado(
		edad = 50,
		nivelDeDolor = 14,
		fortalezaMuscular = 40
	)
	const magb = new Magneto(color = "blanco")
	const bib = new Bicicleta(color = "blanco")
	const mib = new Minitramp(color = "blanco")
	const bir = new Bicicleta(color = "rojo")
	const magv = new Magneto(color = "verde")
	
	const rutinaL = [bib, mib, bib, magb]
	const rutinaV = [bir, magv, bib]
	
	method initialize(){
		nicolas.asignarRutina(rutinaL)
		victoria.asignarRutina(rutinaL)
		julian.asignarRutina(rutinaV)
		zoe.asignarRutina(rutinaL)
	}
	
	test"Nicolas puede hacer la rutina asignada"{
		assert.equals(true, nicolas.puedeHacerLaRutina())
	}
	test"El dolor de nicolas haciendo rutina es de 1.8 y fortaleza 34"{
		nicolas.tomarRutina()
		assert.equals(true, nicolas.nivelDeDolor() == 1.8 and
							nicolas.fortalezaMuscular() == 34)
	}
	test"Victoria no puede hacer la rutina"{
		assert.equals(false, victoria.puedeHacerLaRutina())
	}
	test"Julian puede hacer la rutina asignada"{
		assert.equals(true, julian.puedeHacerLaRutina())
	}
	test"El dolor de julian haciendo rutina es 29.3 y fortaleza 62"{
		julian.tomarRutina()
		assert.equals(true, julian.nivelDeDolor() == 29.3 and
							julian.fortalezaMuscular() == 62)
	}
	test"Zoe puede hacer la rutina asignada"{
		assert.equals(true, zoe.puedeHacerLaRutina())
	}
	test"El dolor de zoe haciendo rutina y decremento 2 es 3.4 y fortaleza 51"{
		zoe.recuperacion(2)
		zoe.tomarRutina()
		assert.equals(true, zoe.nivelDeDolor() == 3.4 and
							zoe.fortalezaMuscular() == 51)
	}
}














